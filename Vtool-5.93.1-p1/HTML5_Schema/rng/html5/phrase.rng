<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0" 
  xmlns="http://relaxng.org/ns/structure/1.0" 
  datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <define name="a.elem.phrasing">
    <a:documentation> RELAX NG Schema for HTML 5: Phrase Markup</a:documentation>
    <a:documentation>Contextual Hyperlink: &lt;a&gt;</a:documentation>
    <element name="a">
      <interleave>
        <ref name="a.inner.phrasing"/>
        <ref name="a.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="a.elem.flow">
    <element name="a">
      <interleave>
        <ref name="a.inner.flow"/>
        <ref name="a.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="a.attrs">
    <interleave>
      <ref name="common.attrs.basic"/>
      <ref name="common.attrs.i18n"/>
      <ref name="common.attrs.present"/>
      <ref name="common.attrs.other"/>
      <optional><ref name="a.attrs.name"/></optional>
      <optional><ref name="shared-hyperlink.attrs.download"/></optional>
      <optional><ref name="shared-hyperlink.attrs.href"/></optional>
      <optional><ref name="shared-hyperlink.attrs.target"/></optional>
      <optional><ref name="shared-hyperlink.attrs.rel"/></optional>
      <optional><ref name="shared-hyperlink.attrs.hreflang"/></optional>
      <optional><ref name="shared-hyperlink.attrs.type"/></optional>
      <optional><ref name="shared-hyperlink.attrs.ping"/></optional>
      <optional><ref name="referrerpolicy"/></optional>
      <optional>
        <choice>
          <ref name="common.attrs.aria.implicit.link"/>
          <ref name="common.attrs.aria.role.button"/>
          <ref name="common.attrs.aria.role.checkbox"/>
          <ref name="common.attrs.aria.role.link"/>
          <ref name="common.attrs.aria.role.menuitem"/>
          <ref name="common.attrs.aria.role.menuitemcheckbox"/>
          <ref name="common.attrs.aria.role.menuitemradio"/>
          <ref name="common.attrs.aria.role.option"/>
          <ref name="common.attrs.aria.role.radio"/>
          <ref name="common.attrs.aria.role.switch"/>
          <ref name="common.attrs.aria.role.tab"/>
          <ref name="common.attrs.aria.role.treeitem"/>
        </choice>
      </optional>
    </interleave>
  </define>
  <define name="a.attrs.name">
    <attribute name="name">
      <data type="string">
        <param name="pattern">\S+</param>
      </data>
      <!-- common.data.id # XXX not what the spec says -->
    </attribute>
  </define>
  <define name="a.inner.phrasing">
    <ref name="common.inner.phrasing"/>
  </define>
  <define name="a.inner.flow">
    <ref name="common.inner.transparent.flow"/>
  </define>
  <define name="shared-hyperlink.attrs.download">
    <a:documentation>Shared hyperlink attributes</a:documentation>
    <attribute name="download">
      <data type="string" datatypeLibrary=""/>
    </attribute>
  </define>
  <define name="shared-hyperlink.attrs.href">
    <attribute name="href">
      <ref name="common.data.uri"/>
    </attribute>
  </define>
  <define name="shared-hyperlink.attrs.target">
    <attribute name="target">
      <!-- common.data.browsing-context-or-keyword -->
      <data type="string">
        <param name="pattern">()|([^_].*)|(_[bB][lL][aA][nN][kK])|(_[sS][eE][lL][fF])|(_[pP][aA][rR][eE][nN][tT])|(_[tT][oO][pP])</param>
      </data>
    </attribute>
  </define>
  <define name="shared-hyperlink.attrs.rel">
    <attribute name="rel">
      <choice>
        <value type="string"/>
        <data type="string">
          <param name="pattern">alternate|author|bookmark|external|help|license|next|nofollow|noreferrer|noopener|prev|search|tag</param>
        </data>
      </choice>
    </attribute>
  </define>
  <define name="shared-hyperlink.attrs.hreflang">
    <attribute name="hreflang">
      <choice>
        <!-- common.data.langcode -->
        <value type="string" datatypeLibrary=""/>
        <data type="string">
          <param name="pattern">([a-zA-Z]{2}|[iI]-[a-zA-Z]+|[xX]-[a-zA-Z]{1,8})(-[a-zA-Z]{1,8})*</param>
        </data>
      </choice>
    </attribute>
  </define>
  <define name="shared-hyperlink.attrs.media">
    <attribute name="media">
      <!-- common.data.mediaquery -->
      <data type="string">
        <param name="pattern">.[^ ]+((\sand\s)\((.[\s\S]+)\)?)?\s*</param>
      </data>
    </attribute>
  </define>
  <define name="shared-hyperlink.attrs.type">
    <attribute name="type">
      <!-- common.data.mimetype -->
      <data type="string">
        <param name="pattern">.[^ ]+/.[^ ]+</param>
      </data>
    </attribute>
  </define>
  <define name="shared-hyperlink.attrs.ping">
    <interleave>
      <attribute name="ping">
        <!-- common.data.uris.http.or.https -->
        <data type="string">
          <param name="pattern">http(s)?://.+</param>
        </data>
      </attribute>
    </interleave>
  </define>
  <define name="referrerpolicy">
    <interleave>
      <attribute name="referrerpolicy">
        <choice>
          <value type="string" datatypeLibrary=""/>
          <value type="string" datatypeLibrary="">no-referrer</value>
          <value type="string" datatypeLibrary="">no-referrer-when-downgrade</value>
          <value type="string" datatypeLibrary="">same-origin</value>
          <value type="string" datatypeLibrary="">origin</value>
          <value type="string" datatypeLibrary="">strict-origin</value>
          <value type="string" datatypeLibrary="">origin-when-cross-origin</value>
          <value type="string" datatypeLibrary="">strict-origin-when-cross-origin</value>
          <value type="string" datatypeLibrary="">unsafe-url</value>
        </choice>
      </attribute>
    </interleave>
  </define>
  <define name="em.elem">
    <a:documentation>Emphatic Stress: &lt;em&gt;</a:documentation>
    <element name="em">
      <interleave>
        <ref name="em.inner"/>
        <ref name="em.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="em.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <optional>
        <ref name="common.attrs.aria"/>
      </optional>
    </interleave>
  </define>
  <define name="em.inner">
    <ref name="common.inner.phrasing"/>
  </define>
  <define name="strong.elem">
    <a:documentation>Strong Importance: &lt;strong&gt;</a:documentation>
    <element name="strong">
      <interleave>
        <ref name="strong.inner"/>
        <ref name="strong.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="strong.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <optional>
        <ref name="common.attrs.aria"/>
      </optional>
    </interleave>
  </define>
  <define name="strong.inner">
    <ref name="common.inner.phrasing"/>
  </define>
  <define name="small.elem">
    <a:documentation>Small Print and Side Comments: &lt;small&gt;</a:documentation>
    <element name="small">
      <interleave>
        <ref name="small.inner"/>
        <ref name="small.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="small.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <optional>
        <ref name="common.attrs.aria"/>
      </optional>
    </interleave>
  </define>
  <define name="small.inner">
    <ref name="common.inner.phrasing"/>
  </define>
  <define name="mark.elem">
    <a:documentation>Marked (Highlighted) Text: &lt;mark&gt;</a:documentation>
    <interleave>
      <element name="mark">
        <interleave>
          <ref name="mark.inner"/>
          <ref name="mark.attrs"/>
        </interleave>
      </element>
    </interleave>
  </define>
  <define name="mark.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <optional>
        <choice>
          <ref name="common.attrs.aria.role.presentation"/>
          <ref name="common.attrs.aria.role.menuitem"/>
        </choice>
      </optional>
    </interleave>
  </define>
  <define name="mark.inner">
    <ref name="common.inner.phrasing"/>
  </define>
  <define name="abbr.elem">
    <a:documentation>Abbreviation: &lt;abbr&gt;</a:documentation>
    <element name="abbr">
      <interleave>
        <ref name="abbr.inner"/>
        <ref name="abbr.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="abbr.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <optional>
        <!-- 	abbr.attrs.title included in common.attrs -->
        <ref name="common.attrs.aria"/>
      </optional>
    </interleave>
  </define>
  <define name="abbr.inner">
    <ref name="common.inner.phrasing"/>
  </define>
  <define name="dfn.elem">
    <a:documentation>Defining Instance: &lt;dfn&gt;</a:documentation>
    <element name="dfn">
      <interleave>
        <ref name="dfn.inner"/>
        <ref name="dfn.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="dfn.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <optional>
        <!-- 	dfn.attrs.title included in common.attrs -->
        <ref name="common.attrs.aria"/>
      </optional>
    </interleave>
  </define>
  <define name="dfn.inner">
    <ref name="common.inner.phrasing"/>
  </define>
  <define name="i.elem">
    <a:documentation>Italic: &lt;i&gt;</a:documentation>
    <element name="i">
      <interleave>
        <ref name="i.inner"/>
        <ref name="i.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="i.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <optional>
        <ref name="common.attrs.aria"/>
      </optional>
    </interleave>
  </define>
  <define name="i.inner">
    <ref name="common.inner.phrasing"/>
  </define>
  <define name="b.elem">
    <a:documentation>Bold: &lt;b&gt;</a:documentation>
    <element name="b">
      <interleave>
        <ref name="b.inner"/>
        <ref name="b.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="b.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <optional>
        <ref name="common.attrs.aria"/>
      </optional>
    </interleave>
  </define>
  <define name="b.inner">
    <ref name="common.inner.phrasing"/>
  </define>
  <define name="s.elem">
    <a:documentation>Struck Text: &lt;s&gt;</a:documentation>
    <element name="s">
      <interleave>
        <ref name="s.inner"/>
        <ref name="s.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="s.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <optional>
        <ref name="common.attrs.aria"/>
      </optional>
    </interleave>
  </define>
  <define name="s.inner">
    <ref name="common.inner.phrasing"/>
  </define>
  <define name="u.elem">
    <a:documentation>Underline: &lt;u&gt;</a:documentation>
    <element name="u">
      <interleave>
        <ref name="u.inner"/>
        <ref name="u.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="u.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <optional>
        <ref name="common.attrs.aria"/>
      </optional>
    </interleave>
  </define>
  <define name="u.inner">
    <ref name="common.inner.phrasing"/>
  </define>
  <define name="code.elem">
    <a:documentation>Code Fragment: &lt;code&gt;</a:documentation>
    <element name="code">
      <interleave>
        <ref name="code.inner"/>
        <ref name="code.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="code.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <optional>
        <ref name="common.attrs.aria"/>
      </optional>
    </interleave>
  </define>
  <define name="code.inner">
    <ref name="common.inner.phrasing"/>
  </define>
  <define name="var.elem">
    <a:documentation>Variable or Placeholder: &lt;var&gt;</a:documentation>
    <element name="var">
      <interleave>
        <ref name="var.inner"/>
        <ref name="var.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="var.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <optional>
        <ref name="common.attrs.aria"/>
      </optional>
    </interleave>
  </define>
  <define name="var.inner">
    <ref name="common.inner.phrasing"/>
  </define>
  <define name="samp.elem">
    <a:documentation>(Sample) Output: &lt;samp&gt;</a:documentation>
    <element name="samp">
      <interleave>
        <ref name="samp.inner"/>
        <ref name="samp.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="samp.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <optional>
        <ref name="common.attrs.aria"/>
      </optional>
    </interleave>
  </define>
  <define name="samp.inner">
    <ref name="common.inner.phrasing"/>
  </define>
  <define name="kbd.elem">
    <a:documentation>User Input: &lt;kbd&gt;</a:documentation>
    <element name="kbd">
      <interleave>
        <ref name="kbd.inner"/>
        <ref name="kbd.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="kbd.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <optional>
        <ref name="common.attrs.aria"/>
      </optional>
    </interleave>
  </define>
  <define name="kbd.inner">
    <ref name="common.inner.phrasing"/>
  </define>
  <define name="sup.elem">
    <a:documentation>Superscript: &lt;sup&gt;</a:documentation>
    <element name="sup">
      <interleave>
        <ref name="sup.inner"/>
        <ref name="sup.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="sup.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <optional>
        <ref name="common.attrs.aria"/>
      </optional>
    </interleave>
  </define>
  <define name="sup.inner">
    <ref name="common.inner.phrasing"/>
  </define>
  <define name="sub.elem">
    <a:documentation>Subscript: &lt;sub&gt;</a:documentation>
    <element name="sub">
      <interleave>
        <ref name="sub.inner"/>
        <ref name="sub.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="sub.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <optional>
        <ref name="common.attrs.aria"/>
      </optional>
    </interleave>
  </define>
  <define name="sub.inner">
    <ref name="common.inner.phrasing"/>
  </define>
  <define name="q.elem">
    <a:documentation>Quotation: &lt;q&gt;</a:documentation>
    <element name="q">
      <interleave>
        <ref name="q.inner"/>
        <ref name="q.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="q.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <optional>
        <ref name="q.attrs.cite"/>
      </optional>
      <optional>
        <ref name="common.attrs.aria"/>
      </optional>
    </interleave>
  </define>
  <define name="q.attrs.cite">
    <attribute name="cite">
      <ref name="common.data.uri"/>
    </attribute>
  </define>
  <define name="q.inner">
    <ref name="common.inner.phrasing"/>
  </define>
  <define name="cite.elem">
    <a:documentation>Title of Work: &lt;cite&gt;</a:documentation>
    <element name="cite">
      <interleave>
        <ref name="cite.inner"/>
        <ref name="cite.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="cite.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <optional>
        <ref name="common.attrs.aria"/>
      </optional>
    </interleave>
  </define>
  <define name="cite.inner">
    <ref name="common.inner.phrasing"/>
  </define>
  <define name="span.elem">
    <a:documentation>Generic Span: &lt;span&gt;</a:documentation>
    <element name="span">
      <interleave>
        <ref name="span.inner"/>
        <ref name="span.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="span.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <optional>
        <ref name="common.attrs.aria"/>
      </optional>
    </interleave>
  </define>
  <define name="span.inner">
    <ref name="common.inner.phrasing"/>
  </define>
  <!-- REVISIT allow ol and ul? -->
  <define name="bdo.elem">
    <a:documentation>Bidirectional Override: &lt;bdo&gt;</a:documentation>
    <element name="bdo">
      <interleave>
        <ref name="bdo.inner"/>
        <ref name="bdo.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="bdo.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <optional>
        <!-- dir required in Schematron -->
        <choice>
          <ref name="common.attrs.aria.role.presentation"/>
          <ref name="common.attrs.aria.role.menuitem"/>
        </choice>
      </optional>
    </interleave>
  </define>
  <define name="bdo.inner">
    <ref name="common.inner.phrasing"/>
  </define>
  <define name="bdi.elem">
    <a:documentation>Bidirectional Isolate: &lt;bdi&gt;</a:documentation>
    <element name="bdi">
      <interleave>
        <ref name="bdi.inner"/>
        <ref name="bdi.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="bdi.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <optional>
        <choice>
          <ref name="common.attrs.aria.role.presentation"/>
          <ref name="common.attrs.aria.role.menuitem"/>
        </choice>
      </optional>
    </interleave>
  </define>
  <define name="bdi.inner">
    <ref name="common.inner.phrasing"/>
  </define>
  <define name="br.elem">
    <a:documentation>Line Break: &lt;br&gt;</a:documentation>
    <element name="br">
      <interleave>
        <ref name="br.inner"/>
        <ref name="br.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="br.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <optional>
        <choice>
          <ref name="common.attrs.aria.role.presentation"/>
          <ref name="common.attrs.aria.role.menuitem"/>
        </choice>
      </optional>
    </interleave>
  </define>
  <define name="br.inner">
    <empty/>
  </define>
  <define name="wbr.elem">
    <a:documentation>Line-break opportunity: &lt;wbr&gt;</a:documentation>
    <element name="wbr">
      <interleave>
        <ref name="wbr.inner"/>
        <ref name="wbr.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="wbr.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <optional>
        <choice>
          <ref name="common.attrs.aria.role.presentation"/>
          <ref name="common.attrs.aria.role.menuitem"/>
        </choice>
      </optional>
    </interleave>
  </define>
  <define name="wbr.inner">
    <empty/>
  </define>
</grammar>
