<?xml version="1.0" encoding="UTF-8"?>
<grammar xmlns:a="http://relaxng.org/ns/compatibility/annotations/1.0"
  xmlns="http://relaxng.org/ns/structure/1.0"
  datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes">
  <define name="img.elem">
    <a:documentation> RELAX NG Schema for HTML 5: Embedded Content</a:documentation>
    <a:documentation>Replaced Content</a:documentation>
    <a:documentation>Images: &lt;img&gt;</a:documentation>
    <element name="img">
      <interleave>
        <ref name="img.inner"/>
        <ref name="img.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="img.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <ref name="img.attrs.src"/>
      <optional><ref name="img.attrs.srcset"/></optional>
      <optional><ref name="img.attrs.sizes"/></optional>
      <optional><ref name="img.attrs.alt"/></optional>
      <optional>
        <!-- ARIA: if alt empty, only allowed role value is "presentation"; check in assertions -->
        <ref name="img.attrs.height"/>
      </optional>
      <optional><ref name="img.attrs.width"/></optional>
      <optional><ref name="img.attrs.usemap"/></optional>
      <optional><ref name="img.attrs.ismap"/></optional>
      <optional><ref name="img.attrs.border"/></optional>
    </interleave>
  </define>
  <define name="img.attrs.src">
    <attribute name="src">
      <!-- common.data.uri.non-empty -->
      <data type="string">
        <param name="pattern">(.+)</param>
      </data>
    </attribute>
  </define>
  <define name="img.attrs.srcset">
    <interleave>
      <attribute name="srcset">
        <data type="string" datatypeLibrary=""/>
      </attribute>
    </interleave>
  </define>
  <define name="img.attrs.sizes">
    <interleave>
      <attribute name="sizes">
        <!-- common.data.source.size.list -->
        <data type="string">
          <param name="pattern">.+[vw|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|q|in|pc|pt|px]+</param>
        </data>
      </attribute>
    </interleave>
  </define>
  <define name="img.attrs.alt">
    <attribute name="alt"/>
  </define>
  <define name="img.attrs.height">
    <attribute name="height">
      <!-- common.data.integer.non-negative -->
      <data type="string">
        <param name="pattern">[0-9]+</param>
      </data>
    </attribute>
  </define>
  <define name="img.attrs.width">
    <attribute name="width">
      <!-- common.data.integer.non-negative -->
      <data type="string">
        <param name="pattern">[0-9]+</param>
      </data>
    </attribute>
  </define>
  <define name="img.attrs.usemap">
    <attribute name="usemap">
      <!-- common.data.hash-name -->
      <data type="string">
        <param name="pattern">#.+</param>
      </data>
    </attribute>
  </define>
  <define name="img.attrs.ismap">
    <attribute name="ismap">
      <choice>
        <value type="string">ismap</value>
        <value type="string"/>
      </choice>
    </attribute>
  </define>
  <define name="img.attrs.border">
    <attribute name="border">
      <value type="string" datatypeLibrary="">0</value>
    </attribute>
  </define>
  <define name="img.inner">
    <empty/>
  </define>
  <define name="picture.elem">
    <a:documentation>Image with multiple sources: picture</a:documentation>
    <interleave>
      <element name="picture">
        <interleave>
          <ref name="picture.inner"/>
          <ref name="picture.attrs"/>
        </interleave>
      </element>
    </interleave>
  </define>
  <define name="picture.attrs">
    <ref name="common.attrs"/>
  </define>
  <define name="picture.inner">
    <zeroOrMore>
      <ref name="source.picture.elem"/>
    </zeroOrMore>
    <ref name="img.elem"/>
  </define>
  <define name="source.picture.elem">
    <a:documentation>Picture source: source srcset</a:documentation>
    <element name="source">
      <interleave>
        <ref name="source.picture.inner"/>
        <ref name="source.picture.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="source.picture.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <optional><ref name="source.picture.attrs.media"/></optional>
      <ref name="source.picture.attrs.srcset"/>
      <optional><ref name="source.picture.attrs.sizes"/></optional>
      <optional><ref name="source.picture.attrs.type"/></optional>
    </interleave>
  </define>
  <define name="source.picture.attrs.media">
    <attribute name="media">
      <!-- common.data.mediaquery -->
      <data type="string">
        <param name="pattern">.[^ ]+((\sand\s)\((.[\s\S]+)\)?)?\s*</param>
      </data>
    </attribute>
  </define>
  <define name="source.picture.attrs.srcset">
    <attribute name="srcset">
      <data type="string" datatypeLibrary=""/>
    </attribute>
  </define>
  <define name="source.picture.attrs.sizes">
    <attribute name="sizes">
      <!-- common.data.source.size.list -->
      <data type="string">
        <param name="pattern">\s(em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|q|in|pc|pt|px)+</param>
      </data>
    </attribute>
  </define>
  <define name="source.picture.attrs.type">
    <attribute name="type">
      <!-- common.data.mimetype -->
      <data type="string">
        <param name="pattern">.[^ ]+/.[^ ]+</param>
      </data>
    </attribute>
  </define>
  <define name="source.picture.inner">
    <empty/>
  </define>
  <define name="embed.elem">
    <a:documentation>Plug-ins: &lt;embed&gt;</a:documentation>
    <element name="embed">
      <interleave>
        <ref name="embed.inner"/>
        <ref name="embed.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="embed.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <optional><ref name="embed.attrs.src"/></optional>
      <optional><ref name="embed.attrs.type"/></optional>
      <optional><ref name="embed.attrs.height"/></optional>
      <optional><ref name="embed.attrs.width"/></optional>
      <optional>
        <choice>
          <ref name="common.attrs.aria.landmark.application"/>
          <ref name="common.attrs.aria.landmark.document"/>
          <ref name="common.attrs.aria.role.img"/>
          <ref name="common.attrs.aria.role.presentation"/>
        </choice>
      </optional>
    </interleave>
  </define>
  <define name="embed.attrs.src">
    <attribute name="src">
      <!-- common.data.uri.non-empty -->
      <ref name="common.data.uri"/>
    </attribute>
  </define>
  <define name="embed.attrs.type">
    <attribute name="type">
      <!-- common.data.mimetype -->
      <data type="string">
        <param name="pattern">.[^ ]+/.[^ ]+</param>
      </data>
    </attribute>
  </define>
  <define name="embed.attrs.height">
    <attribute name="height">
      <!-- common.data.integer.non-negative -->
      <data type="string">
        <param name="pattern">[0-9]+</param>
      </data>
    </attribute>
  </define>
  <define name="embed.attrs.width">
    <attribute name="width">
      <!-- common.data.integer.non-negative -->
      <data type="string">
        <param name="pattern">[0-9]+</param>
      </data>
    </attribute>
  </define>
  <define name="embed.inner">
    <empty/>
  </define>
  <define name="object.elem.flow">
    <a:documentation>Generic Objects: &lt;object&gt;</a:documentation>
    <element name="object">
      <interleave>
        <ref name="object.inner.flow"/>
        <ref name="object.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="object.elem.phrasing">
    <element name="object">
      <interleave>
        <ref name="object.inner.phrasing"/>
        <ref name="object.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="object.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <choice>
        <interleave>
          <ref name="object.attrs.data"/>
          <optional><ref name="object.attrs.type"/></optional>
        </interleave>
        <ref name="object.attrs.type"/>
      </choice>
      <optional><ref name="object.attrs.typemustmatch"/></optional>
      <optional>
        <!--
          		&	object.attrs.classid?
          		&	object.attrs.codebase?
          		&	object.attrs.codetype?
        -->
        <ref name="object.attrs.height"/>
      </optional>
      <optional><ref name="object.attrs.width"/></optional>
      <optional><ref name="object.attrs.usemap"/></optional>
      <optional><ref name="object.attrs.name"/></optional>
      <optional><ref name="common-form.attrs.form"/></optional>
      <optional>
        <choice>
          <ref name="common.attrs.aria.landmark.application"/>
          <ref name="common.attrs.aria.landmark.document"/>
          <ref name="common.attrs.aria.role.img"/>
          <ref name="common.attrs.aria.role.presentation"/>
        </choice>
      </optional>
    </interleave>
  </define>
  <define name="object.attrs.data">
    <attribute name="data">
      <!-- common.data.uri.non-empty -->
      <data type="anyURI"/>
    </attribute>
  </define>
  <define name="object.attrs.type">
    <attribute name="type">
      <!-- common.data.mimetype -->
      <data type="string">
        <param name="pattern">.[^ ]+/.[^ ]+</param>
      </data>
    </attribute>
  </define>
  <define name="object.attrs.typemustmatch">
    <interleave>
      <attribute name="typemustmatch">
        <choice>
          <value type="string" datatypeLibrary="">typemustmatch</value>
          <value type="string" datatypeLibrary=""/>
        </choice>
      </attribute>
    </interleave>
  </define>
  <define name="object.attrs.height">
    <attribute name="height">
      <!-- common.data.integer.non-negative -->
      <data type="string">
        <param name="pattern">[0-9]+</param>
      </data>
    </attribute>
  </define>
  <define name="object.attrs.width">
    <attribute name="width">
      <!-- common.data.integer.non-negative -->
      <data type="string">
        <param name="pattern">[0-9]+</param>
      </data>
    </attribute>
  </define>
  <define name="object.attrs.usemap">
    <attribute name="usemap">
      <!-- common.data.hash-name -->
      <data type="string">
        <param name="pattern">#.+</param>
      </data>
    </attribute>
  </define>
  <define name="object.attrs.name">
    <attribute name="name">
      <!-- common.data.browsing-context -->
      <data type="string">
        <param name="pattern">([^_].+)</param>
      </data>
    </attribute>
  </define>
  <define name="object.inner.flow">
    <zeroOrMore><ref name="param.elem"/></zeroOrMore>
    <ref name="common.inner.transparent.flow"/>
  </define>
  <define name="object.inner.phrasing">
    <zeroOrMore><ref name="param.elem"/></zeroOrMore>
    <ref name="common.inner.phrasing"/>
  </define>
  <define name="param.elem">
    <a:documentation>Initialization Parameters: &lt;param&gt;</a:documentation>
    <element name="param">
      <interleave>
        <ref name="param.inner"/>
        <ref name="param.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="param.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <ref name="param.attrs.name"/>
      <ref name="param.attrs.value"/>
      <optional>
        <choice>
          <ref name="common.attrs.aria.role.presentation"/>
          <ref name="common.attrs.aria.role.menuitem"/>
        </choice>
      </optional>
    </interleave>
  </define>
  <define name="param.attrs.name">
    <attribute name="name">
      <data type="string" datatypeLibrary=""/>
    </attribute>
  </define>
  <define name="param.attrs.value">
    <attribute name="value">
      <data type="string" datatypeLibrary=""/>
    </attribute>
  </define>
  <define name="param.inner">
    <empty/>
  </define>
  <define name="map.elem.flow">
    <a:documentation>
Image Maps</a:documentation>
    <a:documentation>Map Definition: &lt;map&gt;</a:documentation>
    <element name="map">
      <interleave>
        <ref name="map.inner.flow"/>
        <ref name="map.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="map.elem.phrasing">
    <element name="map">
      <interleave>
        <ref name="map.inner.phrasing"/>
        <ref name="map.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="map.attrs">
    <interleave>
      <ref name="common.attrs"/>
      <ref name="map.attrs.name"/>
      <optional>
        <choice>
          <ref name="common.attrs.aria.role.presentation"/>
          <ref name="common.attrs.aria.role.menuitem"/>
        </choice>
      </optional>
    </interleave>
  </define>
  <!-- REVISIT make id required in Schematron -->
  <define name="map.attrs.name">
    <attribute name="name">
      <data type="string" datatypeLibrary=""/>
    </attribute>
  </define>
  <define name="map.inner.flow">
    <ref name="common.inner.transparent.flow"/>
  </define>
  <define name="map.inner.phrasing">
    <ref name="common.inner.phrasing"/>
  </define>
  <define name="area.elem">
    <a:documentation>Map Area Definition: &lt;area&gt;</a:documentation>
    <element name="area">
      <interleave>
        <ref name="area.inner"/>
        <ref name="area.attrs"/>
      </interleave>
    </element>
  </define>
  <define name="area.attrs">
    <interleave>
      <ref name="common.attrs.basic"/>
      <ref name="common.attrs.i18n"/>
      <ref name="common.attrs.present"/>
      <ref name="common.attrs.other"/>
      <optional>
        <ref name="shared-hyperlink.attrs.download"/>
      </optional>
      <optional>
        <interleave>
          <ref name="area.attrs.alt"/>
          <ref name="shared-hyperlink.attrs.href"/>
        </interleave>
      </optional>
      <optional><ref name="shared-hyperlink.attrs.target"/></optional>
      <optional><ref name="shared-hyperlink.attrs.ping"/></optional>
      <optional><ref name="shared-hyperlink.attrs.rel"/></optional>
      <optional><ref name="shared-hyperlink.attrs.hreflang"/></optional>
      <optional><ref name="shared-hyperlink.attrs.type"/></optional>
      <optional>
        <ref name="area.attrs.shape"/>
      </optional>
      <optional>
        <choice>
          <ref name="common.attrs.aria.role.link"/>
          <ref name="common.attrs.aria.role.presentation"/>
          <ref name="common.attrs.aria.role.menuitem"/>
        </choice>
      </optional>
    </interleave>
  </define>
  <define name="area.attrs.alt">
    <attribute name="alt"/>
  </define>
  <define name="area.attrs.shape">
    <choice>
      <interleave>
        <optional>
          <ref name="area.attrs.shape.rect"/>
        </optional>
        <ref name="area.attrs.coords.rect"/>
      </interleave>
      <interleave>
        <ref name="area.attrs.shape.circle"/>
        <ref name="area.attrs.coords.circle"/>
      </interleave>
      <interleave>
        <ref name="area.attrs.shape.poly"/>
        <ref name="area.attrs.coords.poly"/>
      </interleave>
      <ref name="area.attrs.shape.default"/>
    </choice>
  </define>
  <define name="area.attrs.shape.rect">
    <attribute name="shape">
      <value type="string" datatypeLibrary="">rect</value>
    </attribute>
  </define>
  <define name="area.attrs.coords.rect">
    <attribute name="coords">
      <data type="token">
        <param name="pattern">-?[0-9]+,-?[0-9]+,-?[0-9]+,-?[0-9]+</param>
      </data>
    </attribute>
  </define>
  <define name="area.attrs.shape.circle">
    <attribute name="shape">
      <value type="string" datatypeLibrary="">circle</value>
    </attribute>
  </define>
  <define name="area.attrs.coords.circle">
    <attribute name="coords">
      <data type="token">
        <param name="pattern">-?[0-9]+,-?[0-9]+,[0-9]+</param>
      </data>
    </attribute>
  </define>
  <define name="area.attrs.shape.poly">
    <attribute name="shape">
      <value type="string" datatypeLibrary="">poly</value>
    </attribute>
  </define>
  <define name="area.attrs.coords.poly">
    <attribute name="coords">
      <data type="token">
        <param name="pattern">-?[0-9]+,-?[0-9]+,-?[0-9]+,-?[0-9]+,-?[0-9]+,-?[0-9]+(,-?[0-9]+,-?[0-9]+)*</param>
      </data>
    </attribute>
  </define>
  <define name="area.attrs.shape.default">
    <attribute name="shape">
      <value type="string" datatypeLibrary="">default</value>
    </attribute>
  </define>
  <define name="area.inner">
    <empty/>
  </define>
  <define name="embedded.content.attrs.crossorigin">
    <a:documentation>Attributes Common to Embedded Content</a:documentation>
    <interleave>
      <attribute name="crossorigin">
        <choice>
          <value type="string" datatypeLibrary="">anonymous</value>
          <value type="string" datatypeLibrary="">use-credentials</value>
          <value type="string" datatypeLibrary=""/>
        </choice>
      </attribute>
    </interleave>
  </define>
</grammar>
