namespace a = "http://relaxng.org/ns/compatibility/annotations/1.0"

# #####################################################################

# #####################################################################

##  RELAX NG Schema for HTML 5: Core Scripting                        #
# #####################################################################

# #####################################################################
## Scripting Elements

## Inline Scripts: <script>
script.elem.embedded = element script { script.inner.embedded & script.attrs.embedded }
script.attrs.embedded =
  common.attrs
  & script.attrs.type?
  & script.attrs.language?
  & # restricted in Schematron
    script.attrs.integrity?
  & script.attrs.nonce?
  & embedded.content.attrs.crossorigin?
  & (common.attrs.aria.role.presentation | common.attrs.aria.role.menuitem)?
script.elem.imported = element script { script.inner.imported & script.attrs.imported }
script.attrs.imported =
  common.attrs
  & script.attrs.src?
  & script.attrs.defer?
  & script.attrs.async?
  & script.attrs.type?
  & script.attrs.charset?
  & script.attrs.language?
  & # restricted in Schematron
    script.attrs.integrity?
  & script.attrs.nonce?
  & embedded.content.attrs.crossorigin?
  & (common.attrs.aria.role.presentation | common.attrs.aria.role.menuitem)?
script.attrs.src =
  attribute src {
    # common.data.uri.non-empty
    xsd:string { pattern = "(.+)" }
  }
script.attrs.defer = attribute defer { string "defer" | string "" }
script.attrs.async = attribute async { string "async" | string "" }
script.attrs.type =
  attribute type {
    (string "module"
     | # common.data.mimetype
       xsd:string { pattern = ".[^ ]+/.[^ ]+" })
    # XXX without charset parameter!
    
  }
script.attrs.charset =
  attribute charset {
    # common.data.charset
    xsd:string { pattern = "([a-zA-Z0-9]+)" }
  }
script.attrs.language = attribute language { string }
script.attrs.integrity =
  attribute integrity {
    # common.data.integrity
    xsd:string { pattern = "sha256-.+|sha384-.+|sha512-.+" }
  }
script.attrs.nonce = attribute nonce { string }
script.inner.embedded = common.inner.anything
script.inner.imported = common.inner.anything
script.elem = script.elem.embedded | script.elem.imported

## Event Handler Attribute Definitions
common.attrs.scripting &=
  scripting.attr.onabort?
  & scripting.attr.onautocomplete?
  & scripting.attr.onautocompleteerror?
  & scripting.attr.onblur?
  & scripting.attr.oncancel?
  & scripting.attr.oncanplay?
  & scripting.attr.oncanplaythrough?
  & scripting.attr.onchange?
  & scripting.attr.onclick?
  & scripting.attr.onclose?
  & scripting.attr.oncuechange?
  & scripting.attr.oncontextmenu?
  & scripting.attr.ondblclick?
  & scripting.attr.ondrag?
  & scripting.attr.ondragend?
  & scripting.attr.ondragenter?
  & scripting.attr.ondragexit?
  & scripting.attr.ondragleave?
  & scripting.attr.ondragover?
  & scripting.attr.ondragstart?
  & scripting.attr.ondrop?
  & scripting.attr.ondurationchange?
  & scripting.attr.onemptied?
  & scripting.attr.onended?
  & scripting.attr.onerror?
  & scripting.attr.onfocus?
  & scripting.attr.oninput?
  & scripting.attr.oninvalid?
  & scripting.attr.onkeydown?
  & scripting.attr.onkeypress?
  & scripting.attr.onkeyup?
  & scripting.attr.onload?
  & scripting.attr.onloadeddata?
  & scripting.attr.onloadedmetadata?
  & scripting.attr.onloadstart?
  & scripting.attr.onmousedown?
  & scripting.attr.onmouseenter?
  & scripting.attr.onmouseleave?
  & scripting.attr.onmousemove?
  & scripting.attr.onmouseout?
  & scripting.attr.onmouseover?
  & scripting.attr.onmouseup?
  & scripting.attr.onwheel?
  & scripting.attr.onpause?
  & scripting.attr.onplay?
  & scripting.attr.onplaying?
  & scripting.attr.onprogress?
  & scripting.attr.onratechange?
  & scripting.attr.onreset?
  & scripting.attr.onresize?
  & scripting.attr.onscroll?
  & scripting.attr.onseeked?
  & scripting.attr.onseeking?
  & scripting.attr.onselect?
  & scripting.attr.onsort?
  & scripting.attr.onstalled?
  & scripting.attr.onsubmit?
  & scripting.attr.onsuspend?
  & scripting.attr.ontimeupdate?
  & scripting.attr.ontoggle?
  & scripting.attr.onvolumechange?
  & scripting.attr.onwaiting?
# 
#   not allowed in Core Profile
#   <define name="common.attrs.other" combine="interleave">
#   <ref name="common.attrs.scripting"/>
# </define>
scripting.attr.onabort =
  attribute onabort {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onautocomplete =
  attribute onautocomplete {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onautocompleteerror =
  attribute onautocompleteerror {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onblur =
  attribute onblur {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.oncanplay =
  attribute oncanplay {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.oncancel =
  attribute oncancel {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.oncanplaythrough =
  attribute oncanplaythrough {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onchange =
  attribute onchange {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onclick =
  attribute onclick {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onclose =
  attribute onclose {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.oncontextmenu =
  attribute oncontextmenu {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.oncuechange =
  attribute oncuechange {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.ondblclick =
  attribute ondblclick {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.ondrag =
  attribute ondrag {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.ondragend =
  attribute ondragend {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.ondragenter =
  attribute ondragenter {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.ondragexit =
  attribute ondragexit {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.ondragleave =
  attribute ondragleave {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.ondragover =
  attribute ondragover {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.ondragstart =
  attribute ondragstart {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.ondrop =
  attribute ondrop {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.ondurationchange =
  attribute ondurationchange {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onemptied =
  attribute onemptied {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onended =
  attribute onended {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onerror =
  attribute onerror {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onfocus =
  attribute onfocus {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onformchange =
  attribute onformchange {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onforminput =
  attribute onforminput {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.oninput =
  attribute oninput {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.oninvalid =
  attribute oninvalid {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onkeydown =
  attribute onkeydown {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onkeypress =
  attribute onkeypress {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onkeyup =
  attribute onkeyup {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onload =
  attribute onload {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onloadeddata =
  attribute onloadeddata {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onloadedmetadata =
  attribute onloadedmetadata {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onloadstart =
  attribute onloadstart {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onmousedown =
  attribute onmousedown {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onmouseenter =
  attribute onmouseenter {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onmouseleave =
  attribute onmouseleave {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onmousemove =
  attribute onmousemove {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onmouseout =
  attribute onmouseout {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onmouseover =
  attribute onmouseover {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onmouseup =
  attribute onmouseup {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onwheel =
  attribute onwheel {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onpause =
  attribute onpause {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onplay =
  attribute onplay {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onplaying =
  attribute onplaying {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onprogress =
  attribute onprogress {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onratechange =
  attribute onratechange {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onreset =
  attribute onreset {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onresize =
  attribute onresize {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onscroll =
  attribute onscroll {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onseeked =
  attribute onseeked {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onseeking =
  attribute onseeking {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onselect =
  attribute onselect {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onsort =
  attribute onsort {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onstalled =
  attribute onstalled {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onsubmit =
  attribute onsubmit {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onsuspend =
  attribute onsuspend {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.ontimeupdate =
  attribute ontimeupdate {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.ontoggle =
  attribute ontoggle {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onvolumechange =
  attribute onvolumechange {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
scripting.attr.onwaiting =
  attribute onwaiting {
    xsd:string ""
    | xsd:string { pattern = ".[^ ]+\s?" }
    | xsd:string { pattern = "\w+\s?\(\\'.*\\'\)\s?" }
  }
# scripting.attr.common =
#	(	scripting.attr.mouse
#	&	scripting.attr.keyboard
#	&	scripting.attr.focus
#	)
# 
# scripting.attr.mouse =
#	(	scripting.attr.mouse.click?
#	&	scripting.attr.mouse.dblclick?
#	&	scripting.attr.mouse.down?
#	&	scripting.attr.mouse.up?
#	&	scripting.attr.mouse.over?
#	&	scripting.attr.mouse.move?
#	&	scripting.attr.mouse.out?
#	)
#	scripting.attr.mouse.click =
#		attribute onclick { string }
#	scripting.attr.mouse.dblclick =
#		attribute ondblclick { string }
#	scripting.attr.mouse.down =
#		attribute onmousedown { string }
#	scripting.attr.mouse.up =
#		attribute onmouseup { string }
#	scripting.attr.mouse.over =
#		attribute onmouseover { string }
#	scripting.attr.mouse.move =
#		attribute onmousemove { string }
#	scripting.attr.mouse.out =
#		attribute onmouseout { string }
# 
# scripting.attr.keyboard =
#	(	scripting.attr.keyboard.press?
#	&	scripting.attr.keyboard.down?
#	&	scripting.attr.keyboard.up?
#	)
#	scripting.attr.keyboard.press =
#		attribute onkeypress { string }
#	scripting.attr.keyboard.down =
#		attribute onkeydown { string }
#	scripting.attr.keyboard.up =
#		attribute onkeyup { string }
# 
# 
# scripting.attr.focus =
#	(	scripting.attr.focus.gain?
#	&	scripting.attr.focus.lose?
#	)
#	scripting.attr.focus.gain =
#		attribute onfocus { string }
#	scripting.attr.focus.lose =
#		attribute onblur { string }
# 
# scripting.attr.loading =
#	(	scripting.attr.loading.load?
#	&	scripting.attr.loading.unload?
#	)
#	scripting.attr.loading.load =
#		attribute onload { string }
#	scripting.attr.loading.unload =
#		attribute onunload { string }

# #####################################################################
# Event Handler Attribute Assignments

# body.attrs   &= scripting.attr.loading
